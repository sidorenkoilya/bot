import asyncio
import os
from aiogram import Bot, Dispatcher, Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile, CallbackQuery

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
API_TOKEN = '7546669334:AAEGezLeqVQw5mBiYJFeunLo_6Gophpfylc'

# –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à Telegram-–∫–æ–Ω—Ç–∞–∫—Ç
CONTACT_LINK = "https://t.me/Ilya_sidorenk0"
YOUTUBE_LINK = "https://youtube.com/channel/your_channel"
CHANNEL_ID = "@the_top_info_link"  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —è–∑—ã–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_languages = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_user_language(user_id):
    return user_languages.get(user_id, "uk")  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
def get_text(lang, key):
    translations = {
        "uk": {
            "home": "üè† –î–æ–º–æ–π",
            "partners": "üîó –ü–∞—Ä—Ç–Ω–µ—Ä–∏",
            "vip": "üíé VIP",
            "news": "üì∞ –ù–æ–≤–∏–Ω–∏",
            "tariffs": "üìã –¢–∞—Ä–∏—Ñ–∏",
            "youtube": "‚ñ∂Ô∏è YouTube",
            "change_language": "üåç –ó–º—ñ–Ω–∏—Ç–∏ –º–æ–≤—É",
            "subscribe": "üöÄ –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è",
            "back": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "iban": "üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ IBAN",
            "card_number": "üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç–∫–∏",
        },
        "ru": {
            "home": "üè† –î–æ–º–æ–π",
            "partners": "üîó –ü–∞—Ä—Ç–Ω—ë—Ä—ã",
            "vip": "üíé VIP",
            "news": "üì∞ –ù–æ–≤–æ—Å—Ç–∏",
            "tariffs": "üìã –¢–∞—Ä–∏—Ñ—ã",
            "youtube": "‚ñ∂Ô∏è YouTube",
            "change_language": "üåç –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
            "subscribe": "üöÄ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è",
            "back": "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            "iban": "üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ IBAN",
            "card_number": "üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã",
        },
        "en": {
            "home": "üè† Home",
            "partners": "üîó Partners",
            "vip": "üíé VIP",
            "news": "üì∞ News",
            "tariffs": "üìã Tariffs",
            "youtube": "‚ñ∂Ô∏è YouTube",
            "change_language": "üåç Change Language",
            "subscribe": "üöÄ Subscribe",
            "back": "‚¨ÖÔ∏è Back",
            "iban": "üí≥ Payment via IBAN",
            "card_number": "üí≥ Card Number",
        },
    }
    return translations[lang].get(key, key)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu(lang="uk"):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=get_text(lang, "partners"), callback_data="partners"),
                InlineKeyboardButton(text=get_text(lang, "vip"), callback_data="vip")
            ],
            [
                InlineKeyboardButton(text=get_text(lang, "news"), callback_data="news"),
                InlineKeyboardButton(text=get_text(lang, "tariffs"), callback_data="tariffs")
            ],
            [
                InlineKeyboardButton(text=get_text(lang, "youtube"), url=YOUTUBE_LINK),
                InlineKeyboardButton(text=get_text(lang, "change_language"), callback_data="language")
            ],
            [
                InlineKeyboardButton(text=get_text(lang, "subscribe"), url=CONTACT_LINK),
                InlineKeyboardButton(text=get_text(lang, "home"), callback_data="home")
            ]
        ]
    )

# –ü–æ–¥–º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤
def get_tariffs_menu(lang="uk"):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–¢–∞—Ä–∏—Ñ 1: 1000 –≥—Ä–Ω", callback_data="tariff_1")],
            [InlineKeyboardButton(text="–¢–∞—Ä–∏—Ñ 2: 2000 –≥—Ä–Ω", callback_data="tariff_2")],
            [InlineKeyboardButton(text="–¢–∞—Ä–∏—Ñ 3: 3000 –≥—Ä–Ω", callback_data="tariff_3")],
            [InlineKeyboardButton(text=get_text(lang, "back"), callback_data="home")]
        ]
    )

# –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ–Ω—é
async def delete_previous_menu(callback: CallbackQuery):
    try:
        await bot.delete_message(callback.message.chat.id, callback.message.message_id)
    except:
        pass

# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(F.text == "/start")
async def send_welcome(message: Message):
    user_languages[message.from_user.id] = get_user_language(message.from_user.id)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    lang = get_user_language(message.from_user.id)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    photo_path = os.path.join(os.getcwd(), "3.png")  # –ü—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ
    photo = FSInputFile(photo_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FSInputFile –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
    await bot.send_photo(
        chat_id=message.chat.id,
        photo=photo
    )

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    main_menu = get_main_menu(lang)
    await message.answer("üî• –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=main_menu)

# –ö–Ω–æ–ø–∫–∞ "–î–æ–º–æ–π"
@router.callback_query(F.data == "home")
async def home_callback(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    await delete_previous_menu(callback)

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    main_menu = get_main_menu(lang)
    await callback.message.answer("üî• –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=main_menu)
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫"
@router.callback_query(F.data == "language")
async def change_language(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    lang_menu = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", callback_data="set_lang_uk")],
            [InlineKeyboardButton(text="English", callback_data="set_lang_en")],
            [InlineKeyboardButton(text="–†—É—Å—Å–∫–∏–π", callback_data="set_lang_ru")]
        ]
    )
    await callback.message.answer(get_text(lang, "change_language"), reply_markup=lang_menu)
    await callback.answer()

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫
@router.callback_query(F.data.in_(["set_lang_uk", "set_lang_en", "set_lang_ru"]))
async def set_language(callback: CallbackQuery):
    new_lang = callback.data.split("_")[-1]
    user_languages[callback.from_user.id] = new_lang
    await callback.message.answer(f"üåç –Ø–∑—ã–∫ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: {new_lang}.")
    await home_callback(callback)

# –ö–Ω–æ–ø–∫–∞ "VIP"
@router.callback_query(F.data == "vip")
async def show_vip(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    try:
        user_status = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=callback.from_user.id)
        if user_status.status in ("member", "administrator", "creator"):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º VIP-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
            vip_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text=get_text(get_user_language(callback.from_user.id), "iban"), callback_data="iban_transfer")],
                    [InlineKeyboardButton(text=get_text(get_user_language(callback.from_user.id), "card_number"), callback_data="card_number_transfer")],
                    [InlineKeyboardButton(text=get_text(get_user_language(callback.from_user.id), "back"), callback_data="home")]
                ]
            )
            await callback.message.answer(
                "üíé VIP-–ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º:\n"
                "‚úîÔ∏è –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É —á–∞—Ç—É\n"
                "‚úîÔ∏è –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã\n"
                "‚úîÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è–º\n\n"
                "–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –Ω–∞–º–∏!",
                reply_markup=vip_menu
            )
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            vip_promo_menu = InlineKeyboardMarkup(
                inline_keyboard=[
                    [InlineKeyboardButton(text="üöÄ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=CONTACT_LINK)],
                    [InlineKeyboardButton(text=get_text(get_user_language(callback.from_user.id), "back"), callback_data="home")]
                ]
            )
            await callback.message.answer(
                "üíé –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª! –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ VIP-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º.",
                reply_markup=vip_promo_menu
            )
    except Exception as e:
        await callback.message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")

    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–ü–∞—Ä—Ç–Ω—ë—Ä—ã"
@router.callback_query(F.data == "partners")
async def show_partners(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    await delete_previous_menu(callback)

    partners_menu = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f"–ü–∞—Ä—Ç–Ω–µ—Ä {i+1}", url="https://t.me/to_be_on")] for i in range(1, 6)
        ] + [
            [InlineKeyboardButton(text=get_text(lang, "back"), callback_data="home")]
        ]
    )
    await callback.message.answer("üîó –ù–∞—à—ñ –ø–∞—Ä—Ç–Ω–µ—Ä–∏:", reply_markup=partners_menu)
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤–æ—Å—Ç–∏"
@router.callback_query(F.data == "news")
async def show_news(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    await delete_previous_menu(callback)

    news_text = (
        "üì∞ Bitcoin –¥–æ—Å—Ç–∏–≥ –æ—Ç–º–µ—Ç–∫–∏ $40,000.\n"
        "üì∞ Ethereum –≤—ã–ø—É—Å—Ç–∏–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Shanghai.\n"
        "üì∞ Ripple –≤—ã–∏–≥—Ä–∞–ª —Å—É–¥ –ø—Ä–æ—Ç–∏–≤ SEC.\n"
        "üì∞ Tesla –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∞ $1,5 –º–ª—Ä–¥ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.\n"
        "üì∞ Intel –∞–Ω–æ–Ω—Å–∏—Ä–æ–≤–∞–ª —á–∏–ø –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞.\n"
        "üì∞ Binance –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ü–µ–Ω—Ç—Ä –≤ –ê–±—É-–î–∞–±–∏.\n"
        "üì∞ Apple –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ñ–∏–Ω—Ç–µ—Ö-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n"
        "üì∞ Mastercard –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.\n"
        "üì∞ Fidelity –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫—Ä–∏–ø—Ç–æ-—Ñ–æ–Ω–¥.\n"
        "üì∞ –ö–∏—Ç–∞–π—Å–∫–∏–π –∑–∞–≤–æ–¥ —É–≤–µ–ª–∏—á–∏–ª –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –±–ª–æ–∫—á–µ–π–Ω-—á–∏–ø–æ–≤."
    )
    news_menu = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=get_text(lang, "back"), callback_data="home")]
        ]
    )
    await callback.message.answer(news_text, reply_markup=news_menu)
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ "–¢–∞—Ä–∏—Ñ—ã"
@router.callback_query(F.data == "tariffs")
async def show_tariffs(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    await delete_previous_menu(callback)

    tariffs_menu = get_tariffs_menu(lang)
    await callback.message.answer("üìã –û–±–µ—Ä—ñ—Ç—å —Ç–∞—Ä–∏—Ñ:", reply_markup=tariffs_menu)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤
@router.callback_query(F.data.in_(["tariff_1", "tariff_2", "tariff_3"]))
async def show_tariff_details(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    
    tariff_details = {
        "tariff_1": "üí∞ **–¢–∞—Ä–∏—Ñ 1**\n–¶–µ–Ω–∞: 1000 –≥—Ä–Ω\n–û–ø–∏—Å–∞–Ω–∏–µ: –£—Å–ª—É–≥–∏ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞.",
        "tariff_2": "üí∞ **–¢–∞—Ä–∏—Ñ 2**\n–¶–µ–Ω–∞: 2000 –≥—Ä–Ω\n–û–ø–∏—Å–∞–Ω–∏–µ: –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.",
        "tariff_3": "üí∞ **–¢–∞—Ä–∏—Ñ 3**\n–¶–µ–Ω–∞: 3000 –≥—Ä–Ω\n–û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–µ–º–∏—É–º —É—Å–ª—É–≥–∏ –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤."
    }
    selected_tariff = tariff_details[callback.data]

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ VIP
    tariff_menu = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=get_text(lang, "vip"), callback_data="vip")],
            [InlineKeyboardButton(text=get_text(lang, "back"), callback_data="home")]
        ]
    )
    
    await callback.message.answer(selected_tariff, reply_markup=tariff_menu, parse_mode="Markdown")
    await callback.answer()

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())